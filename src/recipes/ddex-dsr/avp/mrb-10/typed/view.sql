use schema TYPED_AVP_MRB_10;

CREATE OR REPLACE VIEW HEAD (
  ASSET_ID,
  LINE_INDEX,
  RECORD_TYPE,
  MESSAGE_VERSION,
  PROFILE,
  PROFILE_VERSION,
  MESSAGE_ID,
  MESSAGE_CREATED_DATE_TIME,
  FILE_NUMBER,
  NUMBER_OF_FILES,
  USAGE_START_DATE,
  USAGE_END_DATE,
  SENDER_PARTY_ID,
  SENDER_NAME,
  SERVICE_DESCRIPTION,
  RECIPIENT_PARTY_ID,
  RECIPIENT_NAME,
  REPRESENTED_REPERTOIRE
) AS SELECT
  ASSET_ID,
  LINE_INDEX,
  RECORD_TYPE[0]::string,
  MESSAGE_VERSION[0]::string,
  PROFILE[0]::string,
  PROFILE_VERSION[0]::string,
  MESSAGE_ID[0]::string,
  TRY_TO_TIMESTAMP(MESSAGE_CREATED_DATE_TIME[0]::string, 'YYYY-MM-DDTHH24:MI:SSZ'),
  try_to_number(FILE_NUMBER[0]::string),
  try_to_number(NUMBER_OF_FILES[0]::string),
  COALESCE(TRY_TO_DATE(USAGE_START_DATE[0]::string, 'YYYY-MM-DD'),TRY_TO_DATE(USAGE_START_DATE[0]::string, 'YYYY-MM'),TRY_TO_DATE(USAGE_START_DATE[0]::string, 'YYYY')),
  COALESCE(TRY_TO_DATE(USAGE_END_DATE[0]::string, 'YYYY-MM-DD'),TRY_TO_DATE(USAGE_END_DATE[0]::string, 'YYYY-MM'),TRY_TO_DATE(USAGE_END_DATE[0]::string, 'YYYY')),
  SENDER_PARTY_ID[0]::string,
  SENDER_NAME[0]::string,
  IFF(trim(SERVICE_DESCRIPTION[0]::string)='',NULL,SERVICE_DESCRIPTION[0]::string),
  IFF(trim(RECIPIENT_PARTY_ID[0]::string)='',NULL,RECIPIENT_PARTY_ID[0]::string),
  IFF(trim(RECIPIENT_NAME[0]::string)='',NULL,RECIPIENT_NAME[0]::string),
  REPRESENTED_REPERTOIRE
from %ENV%_DDEX_DSR.UNTYPED_AVP_MRB_10.HEAD;


CREATE OR REPLACE VIEW FOOT (
  ASSET_ID,
  LINE_INDEX,
  RECORD_TYPE,
  NUMBER_OF_LINES_IN_FILE,
  NUMBER_OF_LINES_IN_REPORT,
  NUMBER_OF_SUMMARY_RECORDS,
  NUMBER_OF_BLOCKS_IN_FILE,
  NUMBER_OF_BLOCKS_IN_REPORT
) AS SELECT
  ASSET_ID,
  LINE_INDEX,
  RECORD_TYPE[0]::string,
  try_to_number(NUMBER_OF_LINES_IN_FILE[0]::string),
  try_to_number(NUMBER_OF_LINES_IN_REPORT[0]::string),
  try_to_number(NUMBER_OF_SUMMARY_RECORDS[0]::string),
  try_to_number(NUMBER_OF_BLOCKS_IN_FILE[0]::string),
  try_to_number(NUMBER_OF_BLOCKS_IN_REPORT[0]::string)
from %ENV%_DDEX_DSR.UNTYPED_AVP_MRB_10.FOOT;


CREATE OR REPLACE VIEW SY04_01 (
  ASSET_ID,
  LINE_INDEX,
  RECORD_TYPE,
  SUMMARY_RECORD_ID,
  DISTRIBUTION_CHANNEL,
  DISTRIBUTION_CHANNEL_DPID,
  COMMERCIAL_MODEL,
  USE_TYPE,
  TERRITORY,
  SERVICE_DESCRIPTION,
  SUBSCRIBER_TYPE,
  SUBSCRIBERS,
  SUB_PERIOD_START_DATE,
  SUB_PERIOD_END_DATE,
  USAGES_IN_SUB_PERIOD,
  USAGES_IN_REPORTING_PERIOD,
  CURRENCY_OF_REPORTING,
  CURRENCY_OF_TRANSACTION,
  EXCHANGE_RATE,
  CONSUMER_PAID_UNIT_PRICE,
  NET_REVENUE,
  MUSIC_USAGE_PERCENTAGE
) AS SELECT
  ASSET_ID,
  LINE_INDEX,
  RECORD_TYPE[0]::string,
  SUMMARY_RECORD_ID[0]::string,
  IFF(trim(DISTRIBUTION_CHANNEL[0]::string)='',NULL,DISTRIBUTION_CHANNEL[0]::string),
  IFF(trim(DISTRIBUTION_CHANNEL_DPID[0]::string)='',NULL,DISTRIBUTION_CHANNEL_DPID[0]::string),
  COMMERCIAL_MODEL[0]::string,
  IFF(trim(USE_TYPE[0]::string)='',NULL,USE_TYPE[0]::string),
  TERRITORY[0]::string,
  SERVICE_DESCRIPTION[0]::string,
  SUBSCRIBER_TYPE[0]::string,
  try_to_number(SUBSCRIBERS[0]::string, 38, 8),
  COALESCE(TRY_TO_DATE(SUB_PERIOD_START_DATE[0]::string, 'YYYY-MM-DD'),TRY_TO_DATE(SUB_PERIOD_START_DATE[0]::string, 'YYYY-MM'),TRY_TO_DATE(SUB_PERIOD_START_DATE[0]::string, 'YYYY')),
  COALESCE(TRY_TO_DATE(SUB_PERIOD_END_DATE[0]::string, 'YYYY-MM-DD'),TRY_TO_DATE(SUB_PERIOD_END_DATE[0]::string, 'YYYY-MM'),TRY_TO_DATE(SUB_PERIOD_END_DATE[0]::string, 'YYYY')),
  try_to_number(USAGES_IN_SUB_PERIOD[0]::string),
  try_to_number(USAGES_IN_REPORTING_PERIOD[0]::string),
  CURRENCY_OF_REPORTING[0]::string,
  IFF(trim(CURRENCY_OF_TRANSACTION[0]::string)='',NULL,CURRENCY_OF_TRANSACTION[0]::string),
  try_to_number(EXCHANGE_RATE[0]::string, 38, 8),
  try_to_number(CONSUMER_PAID_UNIT_PRICE[0]::string, 38, 8),
  try_to_number(NET_REVENUE[0]::string, 38, 8),
  try_to_number(MUSIC_USAGE_PERCENTAGE[0]::string, 38, 8)
from %ENV%_DDEX_DSR.UNTYPED_AVP_MRB_10.SY04_01;


CREATE OR REPLACE VIEW RE03 (
  ASSET_ID,
  LINE_INDEX,
  RECORD_TYPE,
  BLOCK_ID,
  RELEASE_REFERENCE,
  DSP_RELEASE_ID,
  PROPRIETARY_RELEASE_ID,
  ICPN,
  TITLE,
  SUB_TITLE,
  SERIES_TITLE,
  SEASON_NUMBER,
  DISPLAY_ARTIST_NAME,
  DISPLAY_ARTIST_PARTY_ID,
  RELEASE_TYPE,
  DATA_PROVIDER_NAME
) AS SELECT
  ASSET_ID,
  LINE_INDEX,
  RECORD_TYPE[0]::string,
  BLOCK_ID[0]::string,
  RELEASE_REFERENCE[0]::string,
  DSP_RELEASE_ID[0]::string,
  PROPRIETARY_RELEASE_ID,
  IFF(trim(ICPN[0]::string)='',NULL,ICPN[0]::string),
  TITLE[0]::string,
  IFF(trim(SUB_TITLE[0]::string)='',NULL,SUB_TITLE[0]::string),
  IFF(trim(SERIES_TITLE[0]::string)='',NULL,SERIES_TITLE[0]::string),
  try_to_number(SEASON_NUMBER[0]::string),
  IFF(trim(DISPLAY_ARTIST_NAME[0]::string)='',NULL,DISPLAY_ARTIST_NAME[0]::string),
  IFF(trim(DISPLAY_ARTIST_PARTY_ID[0]::string)='',NULL,DISPLAY_ARTIST_PARTY_ID[0]::string),
  IFF(trim(RELEASE_TYPE[0]::string)='',NULL,RELEASE_TYPE[0]::string),
  IFF(trim(DATA_PROVIDER_NAME[0]::string)='',NULL,DATA_PROVIDER_NAME[0]::string)
from %ENV%_DDEX_DSR.UNTYPED_AVP_MRB_10.RE03;


CREATE OR REPLACE VIEW AS03 (
  ASSET_ID,
  LINE_INDEX,
  RECORD_TYPE,
  BLOCK_ID,
  RESOURCE_REFERENCE,
  DSP_RESOURCE_ID,
  ISAN,
  EIDR,
  PROPRIETARY_ID,
  VIDEO_TYPE,
  TITLE,
  SUB_TITLE,
  ORIGINAL_TITLE,
  SEASON_NUMBER,
  EPISODE_NUMBER,
  GENRE,
  DURATION,
  PRODUCER_NAME,
  PRODUCER_PARTY_ID,
  DIRECTOR_NAME,
  DIRECTOR_PARTY_ID,
  ACTOR_NAME,
  ACTOR_PARTY_ID,
  LANGUAGE_LOCALIZATION_TYPE,
  HAS_CAPTIONING,
  HAS_AUDIO_DESCRIPTION,
  LANGUAGE_OF_PERFORMANCE,
  LANGUAGE_OF_DUBBING,
  PRODUCTION_OR_RELEASE_DATE,
  COUNTRY_OF_PRODUCTION
) AS SELECT
  ASSET_ID,
  LINE_INDEX,
  RECORD_TYPE[0]::string,
  BLOCK_ID[0]::string,
  RESOURCE_REFERENCE[0]::string,
  DSP_RESOURCE_ID[0]::string,
  IFF(trim(ISAN[0]::string)='',NULL,ISAN[0]::string),
  IFF(trim(EIDR[0]::string)='',NULL,EIDR[0]::string),
  IFF(trim(PROPRIETARY_ID[0]::string)='',NULL,PROPRIETARY_ID[0]::string),
  VIDEO_TYPE[0]::string,
  TITLE[0]::string,
  IFF(trim(SUB_TITLE[0]::string)='',NULL,SUB_TITLE[0]::string),
  IFF(trim(ORIGINAL_TITLE[0]::string)='',NULL,ORIGINAL_TITLE[0]::string),
  try_to_number(SEASON_NUMBER[0]::string),
  try_to_number(EPISODE_NUMBER[0]::string),
  IFF(trim(GENRE[0]::string)='',NULL,GENRE[0]::string),
  DURATION[0]::string,
  PRODUCER_NAME,
  PRODUCER_PARTY_ID,
  DIRECTOR_NAME,
  DIRECTOR_PARTY_ID,
  ACTOR_NAME,
  ACTOR_PARTY_ID,
  IFF(trim(LANGUAGE_LOCALIZATION_TYPE[0]::string)='',NULL,LANGUAGE_LOCALIZATION_TYPE[0]::string),
  try_to_boolean(HAS_CAPTIONING[0]::string),
  try_to_boolean(HAS_AUDIO_DESCRIPTION[0]::string),
  IFF(trim(LANGUAGE_OF_PERFORMANCE[0]::string)='',NULL,LANGUAGE_OF_PERFORMANCE[0]::string),
  IFF(trim(LANGUAGE_OF_DUBBING[0]::string)='',NULL,LANGUAGE_OF_DUBBING[0]::string),
  COALESCE(TRY_TO_DATE(PRODUCTION_OR_RELEASE_DATE[0]::string, 'YYYY-MM-DD'),TRY_TO_DATE(PRODUCTION_OR_RELEASE_DATE[0]::string, 'YYYY-MM'),TRY_TO_DATE(PRODUCTION_OR_RELEASE_DATE[0]::string, 'YYYY')),
  COUNTRY_OF_PRODUCTION
from %ENV%_DDEX_DSR.UNTYPED_AVP_MRB_10.AS03;


CREATE OR REPLACE VIEW SU03_01 (
  ASSET_ID,
  LINE_INDEX,
  RECORD_TYPE,
  BLOCK_ID,
  SALES_TRANSACTION_ID,
  SUMMARY_RECORD_ID,
  DSP_RESOURCE_ID,
  USAGES,
  NET_REVENUE,
  VALIDITY_PERIOD_START,
  VALIDITY_PERIOD_END
) AS SELECT
  ASSET_ID,
  LINE_INDEX,
  RECORD_TYPE[0]::string,
  BLOCK_ID[0]::string,
  SALES_TRANSACTION_ID[0]::string,
  IFF(trim(SUMMARY_RECORD_ID[0]::string)='',NULL,SUMMARY_RECORD_ID[0]::string),
  DSP_RESOURCE_ID[0]::string,
  try_to_number(USAGES[0]::string),
  try_to_number(NET_REVENUE[0]::string, 38, 8),
  COALESCE(TRY_TO_DATE(VALIDITY_PERIOD_START[0]::string, 'YYYY-MM-DD'),TRY_TO_DATE(VALIDITY_PERIOD_START[0]::string, 'YYYY-MM'),TRY_TO_DATE(VALIDITY_PERIOD_START[0]::string, 'YYYY')),
  COALESCE(TRY_TO_DATE(VALIDITY_PERIOD_END[0]::string, 'YYYY-MM-DD'),TRY_TO_DATE(VALIDITY_PERIOD_END[0]::string, 'YYYY-MM'),TRY_TO_DATE(VALIDITY_PERIOD_END[0]::string, 'YYYY'))
from %ENV%_DDEX_DSR.UNTYPED_AVP_MRB_10.SU03_01;


